<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>stealthnet.scala</groupId>
  <artifactId>stealthnet-ui-web-jsf</artifactId>
  <name>StealthNet web interface - JSF</name>
  <version>0.1.0</version>
  <packaging>jar</packaging>

  <properties>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <encoding>UTF-8</encoding>

    <!-- Dependencies versions -->
    <!-- Scala version (for 3rd party libraries) -->
    <scala.version>2.10</scala.version>
    <!-- org.scala-lang/scala-library -->
    <scala-library.version>${scala.version}.3</scala-library.version>
    <!-- com.typesafe.akka/akka-actor -->
    <akka-actor.version>2.3.0</akka-actor.version>
    <!-- org.slf4j/slf4j-api -->
    <slf4j.version>1.7.6</slf4j.version>
    <!-- ch.qos.logback/logback-classic -->
    <logback.version>1.1.1</logback.version>
    <!-- com.typesafe/config -->
    <config.version>1.2.0</config.version>
    <!-- org.eclipse.jetty/jetty-server -->
    <jetty.version>9.1.3.v20140225</jetty.version>
    <!-- org.eclipse.jetty.toolchain/jetty-jsp-jdt -->
    <jetty-jsp-jdt.version>2.3.3</jetty-jsp-jdt.version>
    <!-- com.sun.faces/jsf-api -->
    <mojara.version>2.2.6</mojara.version>
    <!-- org.primefaces/primefaces -->
    <primefaces.version>4.0</primefaces.version>
    <!-- org.cometd.java/bayeux-api -->
    <cometd.version>3.0.0.beta2</cometd.version>
    <stealthnet-core.version>0.1.0</stealthnet-core.version>

    <!-- Plugins versions -->
    <!-- net.alchim31.maven/scala-maven-plugin -->
    <scala-maven-plugin.version>3.1.6</scala-maven-plugin.version>
    <!-- org.apache.maven.plugins/maven-compiler-plugin -->
    <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
    <!-- org.apache.maven.plugins/maven-surefire-plugin -->
    <maven-surefire-plugin.version>2.16</maven-surefire-plugin.version>
    <!-- org.apache.maven.plugins/maven-dependency-plugin -->
    <maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
    <!-- org.apache.maven.plugins/maven-resources-plugin -->
    <maven-resources-plugin.version>2.6</maven-resources-plugin.version>
    <!-- org.apache.maven.plugins/maven-antrun-plugin -->
    <maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
    <!-- org.apache.maven.plugins/maven-jar-plugin -->
    <maven-jar-plugin.version>2.4</maven-jar-plugin.version>
  </properties>

  <repositories>
    <repository>
      <id>prime-repo</id>
      <name>PrimeFaces Maven Repository</name>
      <url>http://repository.primefaces.org</url>
      <layout>default</layout>
    </repository>
  </repositories>

  <dependencies>
    <!-- Log -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>runtime</scope>
      <version>${logback.version}</version>
    </dependency>

    <!-- Scala language -->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala-library.version}</version>
    </dependency>
    <!-- Akka -->
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-actor_${scala.version}</artifactId>
      <version>${akka-actor.version}</version>
    </dependency>

    <!-- Configuration management -->
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
      <version>${config.version}</version>
    </dependency>

    <!-- Network -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-webapp</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-jsp</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <!-- JSP compiler necessary with Jetty 9; previously provided by org.apache.jasper.glassfish through jetty-jsp -->
    <dependency>
      <groupId>org.eclipse.jetty.toolchain</groupId>
      <artifactId>jetty-jsp-jdt</artifactId>
      <version>${jetty-jsp-jdt.version}</version>
    </dependency>
    <!-- Useful for CometD support (which otherwise relies on earlier versions). -->
    <!-- org.eclipse.jetty/jetty-websocket in Jetty 8 moved to org.eclipse.jetty.websocket/websocket-server in Jetty 9 -->
    <!-- <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-websocket</artifactId>
      <version>${jetty.version}</version>
    </dependency> -->
    <!-- Jetty 9 supports JSR 356 -->
    <dependency>
      <groupId>org.eclipse.jetty.websocket</groupId>
      <artifactId>javax-websocket-server-impl</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <!-- <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-client</artifactId>
      <version>${jetty.version}</version>
    </dependency> -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-jmx</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <!-- jetty-util-ajax is separated from jetty-util in Jetty 9 -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-util-ajax</artifactId>
      <version>${jetty.version}</version>
    </dependency>

    <!-- JSF -->
    <!-- Mojara implementation (https://javaserverfaces.java.net/download.html) -->
    <!-- Note: could be replaced by MyFaces implementation -->
    <dependency>
      <groupId>com.sun.faces</groupId>
      <artifactId>jsf-api</artifactId>
      <version>${mojara.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.faces</groupId>
      <artifactId>jsf-impl</artifactId>
      <version>${mojara.version}</version>
    </dependency>
    <!-- Alternative way ? -->
    <!-- <dependency>
      <groupId>javax.faces</groupId>
      <artifactId>javax.faces-api</artifactId>
      <version>2.1</version>
      <scope>provided</scope>
    </dependency> -->
    <!-- <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.faces</artifactId>
      <version>${mojara.version}</version>
      <scope>provided</scope>
    </dependency> -->
    <!-- PrimeFaces -->
    <dependency>
      <groupId>org.primefaces</groupId>
      <artifactId>primefaces</artifactId>
      <version>${primefaces.version}</version>
    </dependency>

    <!-- CometD -->
    <dependency>
      <groupId>org.cometd.java</groupId>
      <artifactId>bayeux-api</artifactId>
      <version>${cometd.version}</version>
    </dependency>
    <dependency>
      <groupId>org.cometd.java</groupId>
      <artifactId>cometd-java-server</artifactId>
      <version>${cometd.version}</version>
    </dependency>
    <!-- cometd-websocket-jetty in CometD 2.x moved to cometd-java-websocket-jetty-server in CometD 3.x -->
    <!-- cometd-java-websocket-javax-server supports JSR 356 in CometD 3.x -->
    <dependency>
      <groupId>org.cometd.java</groupId>
      <artifactId>cometd-java-websocket-javax-server</artifactId>
      <version>${cometd.version}</version>
    </dependency>

    <!-- StealthNet -->
    <dependency>
      <groupId>stealthnet.scala</groupId>
      <artifactId>stealthnet-core</artifactId>
      <version>${stealthnet-core.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>${scala-maven-plugin.version}</version>
        <configuration>
          <args>
            <arg>-deprecation</arg>
            <arg>-feature</arg>
            <arg>-Yinline-warnings</arg>
            <arg>-optimize</arg>
            <arg>-unchecked</arg>
          </args>
          <recompileMode>incremental</recompileMode>
          <useZincServer>true</useZincServer>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <includes>
            <include>**/*Suite.class</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven-dependency-plugin.version}</version>
        <executions>
          <execution>
            <id>package:copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
          <execution>
            <id>integration-test:copy-dependencies</id>
            <phase>integration-test</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/dist/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <executions>
          <execution>
            <id>integration-test:copy-resources</id>
            <phase>integration-test</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/dist</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/main</directory>
                  <includes>
                    <include>webapp/**</include>
                    <include>config/**</include>
                  </includes>
                </resource>
                <resource>
                  <directory>${basedir}/src/main/scripts</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- maven-resources-plugin:copy-resources does not keep file permissions -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${maven-antrun-plugin.version}</version>
        <executions>
          <execution>
            <id>integration-test:run</id>
            <phase>integration-test</phase>
            <configuration>
              <target>
                <chmod file="${project.build.directory}/dist/launch.sh" perm="775"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven-jar-plugin.version}</version>
        <executions>
          <execution>
            <id>integration-test:jar</id>
            <phase>integration-test</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/dist/webapp/WEB-INF/lib</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <!-- Ignore plugin goals not supported by me2 -->
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[1.0.0,)</versionRange>
                    <goals>
                      <goal>copy-dependencies</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>
