Fix missing peer/remote in some logs ?
Sometimes upon (client) connection timeout, the log context does not contain any peer/remote address:
01:40:07.246 TRACE [New I/O client boss #1-0] stealthnet.scala.network.CommandHandler - [remote=null] Caught exception: java.net.ConnectException: Connection refused: no further information

Handle IPv6 ?
The IPv6 addresses returned by WebCaches seem truncated :/
Examples:
  - 2a01:e34:ef1f:9:6097
  - 2a00:e080:124d::6097
  - 2001:41d0:fe0c::8559

Configuration
How to save configuration changes ?

Route commands
See StealthNet source code.
Strategy to hold/drop packets depending on time received queue length ?
...

Manage DL/UL limits
How ? Netty or done by central object (e.g. Core) which blocks or drops routed data ?

Have logging strategy ?
Other than plain className loggers

Gather DL/UL speeds
In central object (e.g. Core) ?
How to make it so that it is easy to display it graphically (console or graphic) ? Gather transfer lengths by time (precision of 1s, for the first X seconds, then per 5s, etc ...)

Manage data download/upload requests

Have separate 'connection' timeouts
One for handshaking, one for data reception

Remove unnecessary comments that deactivate scalastyle warnings
Search for 'scalastyle:off' which deactivates 'null' for example. Should not be necessary anymore once all code is clean (nothing using null).
May also try to fix those with 'method.length' by splitting the function when possible.

Actually replace assert by require when necessary ?
require shall check input parameters are valid as per contract.
assert shall check there is no logical error in the code.
ensuring shall guarantee returned results are valid as per contract.
