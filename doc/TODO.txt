Route commands
See StealthNet source code.
Strategy to hold/drop packets depending on time received queue length ?
...

Manage DL/UL limits
How ? Netty or done by central object (e.g. Core) which blocks or drops routed data ?

Manage global configuration
Server port, ...
Use Scala XML or parsing support to read/write file ?

Have logging strategy ?
Other than plain className loggers

Manage logging
Configuration file, programatically, or both ?

Gather DL/UL speeds
In central object (e.g. Core) ?
How to make it so that it is easy to display it graphically (console or graphic) ? Gather transfer lengths by time (prevision of 1s, for the first X seconds, then per 5s, etc ...)

Web server to administration interface

Manage data download/upload requests

Have separate 'connection' timeouts
One for handshaking, one for data reception

Remove scalastyle comments that deactivate warning on null in asserts
// scalastyle:off null
Should not be necessary anymore once all code is clean (nothing using null)

Actually replace assert by require when necessary ?
require shall check input parameters are valid as per contract.
assert shall check there is no logical error in the code.
ensuring shall guarantee returned results are valid as per contract.
